{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isVisible","setIsVisible","visibleGoods","goods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAuBMC,EAtDD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOC,GAqBzB,OAnBIP,GACFM,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXZ,GACFI,EAAaS,UAGRT,EA6BcU,CACnBpB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYnB,IAAaL,EAASgB,WACtCS,QAjCmB,WACzBnB,EAAYN,EAASgB,UACrBN,GAAa,IA2BT,iCASA,wBACEa,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYnB,IAAaL,EAASkB,SACtCO,QArCa,WACnBnB,EAAYN,EAASkB,QACrBR,GAAa,IA+BT,4BASA,wBACEa,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAajB,IACjBkB,QAzCQ,WACdjB,GAAc,SAAAkB,GAAQ,OAAKA,KAC3BhB,GAAcH,KAAgBF,IAmC1B,qBASCI,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA7CS,WACjBnB,EAAYN,EAASI,MACrBI,GAAc,GACdE,GAAa,IAuCP,sBAUJ,6BACE,6BACGC,EAAagB,KACZ,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCjI7BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8fe4751.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((goodA, goodB) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return goodA.localeCompare(goodB);\n\n        case SortType.LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n    setIsVisible(true);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n    setIsVisible(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(reversed => !reversed);\n    setIsVisible(!isReversed || !!sortType);\n  };\n\n  const resetGoods = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n    setIsVisible(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(\n            good => <li key={good} data-cy=\"Good\">{good}</li>,\n          )}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}